?pchisq
ch = chisq.test(c(23,50,20),p=c(0.25,0.5,0.25))
ch
ch
ch$expected
desipramine <- read.csv("desipramine.csv")
attach(desipramine)
table(Treatment,Success)
summary(desipramine)
chisq.test(Treatment,Success)
install.packages(c("lubridate", "readr"))
knitr::opts_chunk$set(echo = FALSE)
firedata <- read.csv("PropertyLoss.csv")
library(dplyr)
library(dplyr)
#library(stringr)
#library(readr)
#library(lubridate)
#read in the csv file
firedata <- read.csv("PropertyLoss.csv")
#parse out the incident numbers
firedata$Incident.Num <- strtoi(substr(firedata$Inci_type,0,3))
#collum with the incident type
firedata <- transform(firedata,Incident.Type = ifelse(Incident.Num < "124", "Structure Fire",
ifelse(Incident.Num < "139", "Vehicle Fire",
ifelse(Incident.Num < "165", "Outside Fire", "Not a Fire"))))
#creat the month collum
firedata$Month <-  months(as.Date(firedata$Alm_Date, "%m/%d/%Y"))
#Turn month into the season
firedata <- transform(firedata, Season= ifelse(firedata$Month == "January", "Winter",
ifelse(firedata$Month == "February", "Winter",
ifelse(firedata$Month == "March", "Spring",
ifelse(firedata$Month == "April", "Spring",
ifelse(firedata$Month == "May", "Spring",
ifelse(firedata$Month == "June", "Summer",
ifelse(firedata$Month == "July", "Summer",
ifelse(firedata$Month == "August", "Summer",
ifelse(firedata$Month == "September", "Fall",
ifelse(firedata$Month == "October", "Fall",
ifelse(firedata$Month == "November", "Fall",
ifelse(firedata$Month == "December", "Winter","NULL")))))))))))))
#Create the percent loss
firedata$PercentLoss <- as.numeric(firedata$Pre_Inci_Value) / as.numeric(firedata$Total_Loss)
#filter out non fires
firedata <- filter(firedata, Incident.Type != "Not a Fire")
head(firedata)
#old data
#firedata <- read.csv("PropertyLossEdited.csv")
#Anova test of total loss based on season
aovSeason = aov(PercentLoss ~ Season, data = firedata)
summary(aovSeason)
#Anova test of total loss based on Incident.Type
aovI = aov(PercentLoss ~ Incident.Type, data = firedata)
summary(aovI)
#Percent loss summary of each season
firedata %>%
group_by(Season) %>%
summarize(Md = median(PercentLoss), Mean = mean(PercentLoss), SD = sd(PercentLoss), N = n())
#Winter Subset
winter <- firedata %>%
filter(Season == "Winter") %>%
group_by(Season) %>%
select(Season, Incident.Type,Total_Loss,PercentLoss)
#Spring Subset
spring <- firedata %>%
filter(Season == "Spring") %>%
group_by(Season) %>%
select(Season, Incident.Type,Total_Loss,PercentLoss)
#Summer Subset
summer <- firedata %>%
filter(Season == "Summer") %>%
group_by(Season) %>%
select(Season, Incident.Type,Total_Loss,PercentLoss)
#Fall Subset
fall <- firedata %>%
filter(Season == "Fall") %>%
group_by(Season) %>%
select(Season, Incident.Type,Total_Loss,PercentLoss)
#Box plot of all the subsets
boxplot(log(winter$PercentLoss),log(spring$PercentLoss),log(summer$PercentLoss),log(fall$PercentLoss),
names = c("Winter","Spring","Summer","Fall"), xlab = "Season", ylab = "Total Loss")
#T test, winter and spring
t.test(winter$PercentLoss,spring$PercentLoss)
#T test, winter and summer
t.test(winter$PercentLoss,summer$PercentLoss)
#T test, winter and fall
t.test(winter$PercentLoss,fall$PercentLoss)
#T test, spring and summer
t.test(spring$PercentLoss,summer$PercentLoss)
#T test, spring and fall
t.test(spring$PercentLoss,fall$PercentLoss)
#T test, summer and fall
t.test(summer$PercentLoss,fall$PercentLoss)
#We see that the mean is in the fall is lower then the mean in spring
#scaled box plot to see changes better
#Percent loss summary of each season based on incident type
firedata %>%
group_by(Season, Incident.Type) %>%
summarize(Md = median(PercentLoss), Mean = mean(PercentLoss), SD = sd(PercentLoss), N = n())
0.104 0.518  1.62  1066
2 Spring 0.109 0.783  2.38
#Percent loss summary of each season based on incident type
firedata %>%
group_by( Incident.Type) %>%
summarize(Md = median(PercentLoss), Mean = mean(PercentLoss), SD = sd(PercentLoss), N = n())
tail(firedata)
View(firedata)
summary(firedata$Total_Loss)
summary(firedata$Pre_Inci_Value)
summary(firedata$Pre_Inci_Value)
firedata$Pre_Inci_Value
View(firedata)
firedata$Pre_Inci_Value
summary(firedata$PercentLoss)
Data from Louisville KY on property loss/damage due to fire.
Data from Louisville KY.
Based on property loss/damage due to fire.
sleepAp <- xslx("OSASdataFinalExam.xlsx")
sleepAp <- read.xlsx("OSASdataFinalExam.xlsx")
sleepAp <- read.xlsx("OSASdataFinalExam.xlsx"), sheet = 1, header = TRUE)
sleepAp <- read.xlsx("OSASdataFinalExam.xlsx", sheet = 1, header = TRUE)
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
require(gdata)
install.packages("gdata")
#install.packages("gdata")
require(gdata)
sleepAp <- read.xlsx("OSASdataFinalExam.xlsx", sheet = 1, header = TRUE)
sleepAp <- read.xls("OSASdataFinalExam.xlsx", sheet = 1, header = TRUE)
sleepAp <- read.xlsx("OSASdataFinalExam.xlsx", sheet = 1, header = TRUE)
library(dplyr)
#install.packages("gdata")
require(gdata)
#install.packages("gdata")
library(gdata)
sleepAp <- read.xlsx("OSASdataFinalExam.xlsx", sheet = 1, header = TRUE)
library(readxl)
sleepAp <- read_excel("OSASdataFinalExam.xlsx")
#Create the waist-to-height ratio collum
sleepAp$WtoH <- as.numeric(sleepAp$WAIST) / as.numeric(sleepAp$HEIGHT)
head(sleepAp)
summary(sleepAp$AHI)
#collum with the OSAS severity
sleepAp <- transform(sleepAp, severity  =
ifelse(AHI < "5", "Control",
ifelse(AHI < "16", "mildOSAS",
ifelse(AHI < "30", "moderateOSAS",
"severeOSAS"))))
head(sleepAp$severity)
head(sleepAp)
View(sleepAp)
#collum with the OSAS severity
sleepAp <- transform(sleepAp, severity  =
ifelse(as.numeric(AHI) < as.numeric("5"), "Control",
ifelse(as.numeric(AHI) < as.numeric("5"), "mildOSAS",
ifelse(AHI < "30", "moderateOSAS",
"severeOSAS"))))
#collum with the OSAS severity
sleepAp <- transform(sleepAp, severity  =
ifelse(as.numeric(AHI) < as.numeric("5"), "Control",
ifelse(as.numeric(AHI) < as.numeric("16"), "mildOSAS",
ifelse(AHI < "30", "moderateOSAS",
"severeOSAS"))))
summary(sleepAp$severity)
#collum with the OSAS severity
sleepAp <- transform(sleepAp, severity  =
ifelse(as.numeric(AHI) < as.numeric("5"), "Control",
ifelse(as.numeric(AHI) < as.numeric("16"), "mildOSAS",
ifelse(as.numeric(AHI) < as.numeric("30"), "moderateOSAS",
"severeOSAS"))))
length(sleepAp)
length(sleepAp$age)
summary(sleepAp$age)
sd(sleepAp$age)
table(sleepAp$severity)
table(sleepAp$severity)[1]
table(sleepAp$severity)[1] + 2
table(sleepAp$severity)
(473)/(473 + 72)
(72)/(473 + 72)
#collum with the OSAS severity
sleepAp <- transform(sleepAp, severity  =
ifelse(as.numeric(AHI) < as.numeric("5"), "Control",
ifelse(as.numeric(AHI) < as.numeric("15"), "mildOSAS",
ifelse(as.numeric(AHI) < as.numeric("30"), "moderateOSAS",
"severeOSAS"))))
```{r, include=f}
length(sleepAp$age)
summary(sleepAp$age)
sd(sleepAp$age)
table(sleepAp$severity)
(72)/(473 + 72)
(209)/(473 + 72)
(124)/(473 + 72)
(104)/(473 + 72)
(437)/(437 + 72)
(72)/(437 + 72)
(209)/(437 + 72)
(124)/(437 + 72)
(104)/(437 + 72)
clear
clear
clear
(437)/(437 + 72)
(72)/(437 + 72)
(209)/(437 + 72)
(124)/(437 + 72)
(104)/(437 + 72)
osas <- sleepAp %>%
filter(severity == "mildOSAS" || severity == "moderateOSAS" || severity == "severeOSAS")
summary(osas$age)
osas <- sleepAp %>%
filter(severity == "mildOSAS" || severity == "moderateOSAS" || severity == "severeOSAS")%>%
select(age)
summary(osas$age)
osas <- filter(sleepAp, severity != "Control")
head(osas)
summary(osas$age)
sd(osas$age)
NOosas <- filter(sleepAp, severity = "Control")
NOosas <- filter(sleepAp, severity == "Control")
summary(NOosas$age)
sd(NOosas$age)
t.test(osas,NOosas)
t.test(osas$age,NOosas$age)
table(sleepAp$sex)
150/(150+359)
table(osas$sex)
114 / (114 + 323)
323 / (114 + 323)
table(MOosas$sex)
table(NOosas$sex)
osasTable -> c(c(1,2,3),c(4,5,6),c(7,8,9))
osasTable = c(c(1,2,3),c(4,5,6),c(7,8,9))
kable(osasTable)
library(knitr)
library(kableExtra)
install.packages(kableExtra)
install.packages("kableExtra")
library(kableExtra)
kable(osasTable)
36 / (114 + 323 + 72)
114 / (114 + 323 + 72)
323 / (114 + 323 + 72)
36 / (114 + 323 + 72)
osasTable <- data.frame("Sex" = c("Female","Male"), "OSAS Patients" = c("22","63"), "Control Group" = c("7","7"))
kable(osasTable)
114 / (114 + 323 )
323 / (114 + 323 )
chisq.test(osas,NOosas)
#collum with the OSAS or not
sleepAp <- transform(sleepAp, present  =
ifelse(as.numeric(AHI) < as.numeric("5"), "no",
ifelse(as.numeric(AHI) < as.numeric("15"), "yes",
ifelse(as.numeric(AHI) < as.numeric("30"), "yes",
"yes"))))
chisq.test(sleepAp$present,sleepAp$sex)
prop.test(sleepAp$present,sleepAp$sex)
prop.test(sleepAp$present,sleepAp$sex)
table(sleepAp$present)
table(sleepAp$present)[1]
table(sleepAp$present)[2]
prop.test(sleepAp$present[1],sleepAp$sex[2])
prop.test(c(sleepAp$present[1],sleepAp$present[2]),c(sleepAp$sex[1],sleepAp$sex[2]))
osasTable <- data.frame("Sex" = c("Female","Male"), "OSAS Patients" = c("114","323"), "Control Group" = c("36","36"))
kable(osasTable)
prop.test(c(323,114),c(509,509))
prop.test(c(323,32),c(355,355))
prop.test(c(323,114),c(355,146))
install.packages("kableExtra")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readxl)
library(knitr)
library(kableExtra)
sleepAp <- read_excel("OSASdataFinalExam.xlsx")
summary(sleepAp$BMI~sleepAp$severity)
summary(sleepAp$BMI, sleepAp$severity = "Control")
summary(sleepAp$BMI, sleepAp$severity == "Control")
summary(sleepAp$BMI, sleepAp$severity == "Control")[4]
" " + summary(sleepAp$BMI, sleepAp$severity == "Control")[4]
" " + summary(sleepAp$BMI, sleepAp$severity == "Control")[4][1]
summary(sleepAp$BMI, sleepAp$severity == "Control")[4][1]
summary(sleepAp$BMI, sleepAp$severity == "Control")[4][0]
summary(sleepAp$BMI, sleepAp$severity == "Control")[4][1]
tidy(summary(sleepAp$BMI, sleepAp$severity == "Control"))$mean[1]
library(broom)
tidy(summary(sleepAp$BMI, sleepAp$severity == "Control"))$mean[1]
sd(sleepAp$BMI, sleepAp$severity == "Control")
?sd
sd(sleepAp$BMI~sleepAp$severity == "Control")
sd(sleepAp$BMI, y = sleepAp$severity == "Control")
summary(sleepAp$BMI, sleepAp$severity == "Control")
?mean
sd(subset(sleepAp$BMI, sleepAp$severity == "Control"))
sd(subset(sleepAp, sleepAp$severity == "Control")$BMI)
s <- subset(sleepAp, sleepAp$severity == "Control")
View(desipramine)
View(s)
s <- subset(sleepAp, sleepAp$severity = "Control")
=
s <- subset(sleepAp, severity == "Control")
sleepAp$
View(s)
osasTable <- data.frame("Group" = c("Control","OSAS","Mild OSAS","Moderate OSAS"," Severe OSAS"),
"BMI" = c("114","323"," "," "))
mean(NOosas)
mean(NOosas$BMI)
mean(NOosas$BMI) + " " + (2 * sd(NOosas$BMI))
toString(mean(NOosas$BMI)) + " " + (2 * toString(sd(NOosas$BMI)))
toString(mean(NOosas$BMI))
paste(mean(NOosas$BMI), " +/- ", (2 * sd(NOosas$BMI))
paste(mean(NOosas$BMI), " +/- ", (2 * sd(NOosas$BMI))
paste(mean(NOosas$BMI), " +/- ", (2 * sd(NOosas$BMI)))
botplot(NOosas)
```{r}
botplot(NOosas$BMI)
boxplot(NOosas$BMI)
boxplot(NOosas$BMI,osas$BMI,mild$BMI,moderate$BMI,severe$BMI)
mild <- filter(sleepAp, severity != "mildOSAS")
moderate <- filter(sleepAp, severity == "moderateOSAS")
severe <- filter(sleepAp, severity == "severeOSAS")
boxplot(NOosas$BMI,osas$BMI,mild$BMI,moderate$BMI,severe$BMI)
?boxplot
View(osasTable)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readxl)
library(knitr)
library(kableExtra)
library(broom)
sleepAp <- read_excel("OSASdataFinalExam.xlsx")
table3 <- data.frame("Sex" = c("Female","Male"), "OSAS Patients" = c("114","323","2","3"))
kable(table3)
table3 <- data.frame("Sex" = c("Female","Male"), "OSAS Patients" = c("114","323","2","3","2","3"))
table3 <- data.frame("Sex" = c("Female","Male"), "OSAS Patients" = c("114","323","2","3","2","3"))
kable(table3)
table3 <- data.frame("Sex" = c("Female","Female","Female","Male","Male","Male"),
"Summary" = c("Mean +/- SD","Median","Min - Max")
"OSAS Patients" = c("114","323","2","3","2","3"))
kable(table3)
table3 <- data.frame("Sex" = c("Female","Female","Female","Male","Male","Male"),
"Summary" = c("Mean +/- SD","Median","Min - Max"),
"OSAS Patients" = c("114","323","2","3","2","3"))
kable(table3)
table3 <- data.frame("Sex" = c("Female","Female","Female","Male","Male","Male"),
"Summary" = c("Mean +/- SD","Median","Min - Max"),
"OSAS Patients" = c(paste(mean(osasF, " +/-  ", sd(osasF)))))
osasM <- filter(osas, sex == "male")
osasF <- filter(osas, sex == "female")
NOosasM <- filter(NOosas, sex == "male")
NOosasF <- filter(NOosas, sex == "female")
table3 <- data.frame("Sex" = c("Female","Female","Female","Male","Male","Male"),
"Summary" = c("Mean +/- SD","Median","Min - Max"),
"OSAS Patients" = c(paste(mean(osasF, " +/-  ", sd(osasF)))))
kable(table3)
osasM <- filter(osas, sex == "male")
View(osasF)
View(osasM)
table3 <- data.frame("Sex" = c("Female","Female","Female","Male","Male","Male"),
"Summary" = c("Mean +/- SD","Median","Min - Max"),
"OSAS Patients" = c(paste(mean(osasF$WtoH), " +/-  ", sd(osasF$WtoH)), paste(median(osasF$WtoH)),paste(min(osasF$WtoH), " - ",max(osasF$WtoH))),paste(mean(osasM$WtoH), " +/-  ", sd(osasM$WtoH)), paste(median(osasM$WtoH)),paste(min(osasM$WtoH), " - ",max(osasM$WtoH)))
kable(table3)
View(osasM)
View(osasM)
hist(h1, col=rgb(1,0,0,0.5),xlim=c(0,10), ylim=c(0,200), main=”Overlapping Histogram”, xlab=”Variable”)
hist(h2, col=rgb(0,0,1,0.5), add=T)
hist(osasF$WtoH, col=rgb(1,0,0,0.5),xlim=c(0,10), ylim=c(0,200), main=”Overlapping Histogram”, xlab=”Variable”)
hist(NOosasF$WtoH, col=rgb(0,0,1,0.5), add=T)
box()
hist(osasF$WtoH,col=rgb(1,0,0,0.5),xlim=c(0,10), ylim=c(0,200), main=”Overlapping Histogram”, xlab=”Variable”)
hist(osasF$WtoH,col=rgb(1,0,0,0.5),xlim=c(0,10), ylim=c(0,200), main= Overlapping Histogram, xlab=”Variable”)
hist(osasF$WtoH,col=rgb(1,0,0,0.5),xlim=c(0,10), ylim=c(0,200), main= "Histogram", xlab="Variable")
hist(osasF$WtoH,col=rgb(1,0,0,0.5), main= "Histogram", xlab="Variable")
hist(NOosasF$WtoH, col=rgb(0,0,1,0.5), add=T)
$WtoHNO
?hist
hist(osasF$WtoH,col=rgb(1,0,0,0.5), main= "Histogram", xlab="Waist-to Height Ratio")
t.test(2,1)
t.test(osasF$WtoH,NOosasF$WtoH)
t.test(osasM$WtoH,NOosas>$WtoH)
t.test(osasF$WtoH,NOosasF$WtoH)
t.test(osasM$WtoH,NOosasM$WtoH)
?t.test
t.test(severe$BMI)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readxl)
library(knitr)
library(kableExtra)
library(broom)
sleepAp <- read_excel("OSASdataFinalExam.xlsx")
#Create the waist-to-height ratio collum
sleepAp$WtoH <- as.numeric(sleepAp$WAIST) / as.numeric(sleepAp$HEIGHT)
head(sleepAp$WtoH)
#collum with the OSAS severity
sleepAp <- transform(sleepAp, severity  =
ifelse(as.numeric(AHI) < as.numeric("5"), "Control",
ifelse(as.numeric(AHI) < as.numeric("15"), "mildOSAS",
ifelse(as.numeric(AHI) < as.numeric("30"), "moderateOSAS",
"severeOSAS"))))
length(sleepAp$age)
summary(sleepAp$age)
sd(sleepAp$age)
table(sleepAp$severity)
(437)/(437 + 72)
(72)/(437 + 72)
(209)/(437 + 72)
(124)/(437 + 72)
(104)/(437 + 72)
osas <- filter(sleepAp, severity != "Control")
NOosas <- filter(sleepAp, severity == "Control")
summary(osas$age)
sd(osas$age)
summary(NOosas$age)
sd(NOosas$age)
t.test(osas$age,NOosas$age)
table(sleepAp$sex)
150/(150+359)
table(osas$sex)
114 / (114 + 323 )
323 / (114 + 323 )
table(NOosas$sex)
osasTable <- data.frame("Sex" = c("Female","Male"), "OSAS Patients" = c("114","323"), "Control Group" = c("36","36"))
kable(osasTable)
#collum with the OSAS or not
sleepAp <- transform(sleepAp, present  =
ifelse(as.numeric(AHI) < as.numeric("5"), "no",
ifelse(as.numeric(AHI) < as.numeric("15"), "yes",
ifelse(as.numeric(AHI) < as.numeric("30"), "yes",
"yes"))))
chisq.test(sleepAp$present,sleepAp$sex)
prop.test(c(323,114),c(355,146))
mild <- filter(sleepAp, severity != "mildOSAS")
moderate <- filter(sleepAp, severity == "moderateOSAS")
severe <- filter(sleepAp, severity == "severeOSAS")
table2 <- data.frame("Group" = c("Control","OSAS","Mild OSAS","Moderate OSAS"," Severe OSAS"),
"BMI" = c(paste(mean(NOosas$BMI), " +/- ", (2 * sd(NOosas$BMI))),paste(mean(osas$BMI), " +/- ", (2 * sd(osas$BMI))),paste(mean(mild$BMI), " +/- ", (2 * sd(mild$BMI))),paste(mean(moderate$BMI), " +/- ", (2 * sd(moderate$BMI))),paste(mean(severe$BMI), " +/- ", (2 * sd(severe$BMI)))),
"Waist Circumference" = c(paste(mean(NOosas$WAIST), " +/- ", (2 * sd(NOosas$WAIST))),paste(mean(osas$WAIST), " +/- ", (2 * sd(osas$WAIST))),paste(mean(mild$WAIST), " +/- ", (2 * sd(mild$WAIST))),paste(mean(moderate$WAIST), " +/- ", (2 * sd(moderate$WAIST))),paste(mean(severe$WAIST), " +/- ", (2 * sd(severe$WAIST)))),
"Waist-to-Height Ratio" = c(paste(mean(NOosas$WtoH), " +/- ", (2 * sd(NOosas$WtoH))),paste(mean(osas$WtoH), " +/- ", (2 * sd(osas$WtoH))),paste(mean(mild$WtoH), " +/- ", (2 * sd(mild$WtoH))),paste(mean(moderate$WtoH), " +/- ", (2 * sd(moderate$WtoH))),paste(mean(severe$WtoH), " +/- ", (2 * sd(severe$WtoH)))) )
kable(table2)
boxplot(NOosas$BMI,osas$BMI,mild$BMI,moderate$BMI,severe$BMI, ylab = "BMI" , xlab = "Group",col="orange",border="brown", names = c("Control","OSAS","Mild OSAS","Moderate OSAS"," Severe OSAS"), cex.axis=0.75)
osasM <- filter(osas, sex == "male")
osasF <- filter(osas, sex == "female")
NOosasM <- filter(NOosas, sex == "male")
NOosasF <- filter(NOosas, sex == "female")
table3 <- data.frame("Sex" = c("Female","Female","Female","Male","Male","Male"),
"Summary" = c("Mean +/- SD","Median","Min - Max"),
"OSAS Patients" = c(paste(mean(osasF$WtoH), " +/-  ", sd(osasF$WtoH)), paste(median(osasF$WtoH)),paste(min(osasF$WtoH), " - ",max(osasF$WtoH)),paste(mean(osasM$WtoH), " +/-  ", sd(osasM$WtoH)), paste(median(osasM$WtoH)),paste(min(osasM$WtoH), " - ",max(osasM$WtoH))),"Control Group" = c(paste(mean(NOosasF$WtoH), " +/-  ", sd(NOosasF$WtoH)), paste(median(NOosasF$WtoH)),paste(min(NOosasF$WtoH), " - ",max(NOosasF$WtoH)),paste(mean(NOosasM$WtoH), " +/-  ", sd(NOosasM$WtoH)), paste(median(NOosasM$WtoH)),paste(min(NOosasM$WtoH), " - ",max(NOosasM$WtoH))
), "p-value" = c("NA","3.859e-11","NA","NA","4.147e-08","NA"))
kable(table3)
tF = t.test(osasF$WtoH,NOosasF$WtoH)
tM = t.test(osasM$WtoH,NOosasM$WtoH)
hist(osasF$WtoH,col=rgb(1,0,0,0.5), main= "Male Waist-to Height Ratio for OSAS Patients vs Control Groups", xlab="Waist-to Height Ratio")
hist(NOosasF$WtoH, col=rgb(0,0,1,0.5), add=T)
legend("topright", c("OSAS Patients", "Control Group"), lty=c(1,1), bty = "n", angle = c(0, 0), density = c(100, 100),
fill=c("red", "blue"))
hist(osasM$WtoH,col=rgb(1,0,0,0.5), main= "Male Waist-to Height Ratio for OSAS Patients vs Control Groups", xlab="Waist-to Height Ratio")
hist(NOosasM$WtoH, col=rgb(0,0,1,0.5), add=T)
legend("topright", c("OSAS Patients", "Control Group"), lty=c(1,1), bty = "n", angle = c(0, 0), density = c(100, 100),
fill=c("red", "blue"))
t.test(severe$BMI)
t.test(severe$BMI, alternative = "greater")
t.test(severe$BMI, alternative = "greater")
t.test(severe$BMI,mu = 30, alternative = "greater")
